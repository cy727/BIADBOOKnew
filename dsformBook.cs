//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace BIADBOOK {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class dsformBook : DataSet {
        
        private bookDataTable tablebook;
        
        public dsformBook() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected dsformBook(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["book"] != null)) {
                    this.Tables.Add(new bookDataTable(ds.Tables["book"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public bookDataTable book {
            get {
                return this.tablebook;
            }
        }
        
        public override DataSet Clone() {
            dsformBook cln = ((dsformBook)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["book"] != null)) {
                this.Tables.Add(new bookDataTable(ds.Tables["book"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablebook = ((bookDataTable)(this.Tables["book"]));
            if ((this.tablebook != null)) {
                this.tablebook.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "dsformBook";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/dsformBook.xsd";
            this.Locale = new System.Globalization.CultureInfo("zh-CN");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablebook = new bookDataTable();
            this.Tables.Add(this.tablebook);
        }
        
        private bool ShouldSerializebook() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void bookRowChangeEventHandler(object sender, bookRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class bookDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn column书名;
            
            private DataColumn column并列提名;
            
            private DataColumn column副提名;
            
            private DataColumn column并列副提名;
            
            private DataColumn column国别;
            
            private DataColumn column第一责任者;
            
            private DataColumn column其他责任者;
            
            private DataColumn column版本;
            
            private DataColumn column有关责任者;
            
            private DataColumn column出版地;
            
            private DataColumn column出版者;
            
            private DataColumn column出版日期;
            
            private DataColumn column页数;
            
            private DataColumn column开本;
            
            private DataColumn column附图;
            
            private DataColumn column附件;
            
            private DataColumn column价格;
            
            private DataColumn column附注;
            
            private DataColumn column文种号;
            
            private DataColumn column图书分类号;
            
            private DataColumn column种次号;
            
            private DataColumn column年代顺序号;
            
            private DataColumn column入库日期;
            
            private DataColumn column馆藏量;
            
            private DataColumn column借出书量;
            
            private DataColumn column借出次数;
            
            private DataColumn column拒借次数;
            
            private DataColumn column拒借标记;
            
            private DataColumn column有效规范;
            
            private DataColumn column失效规范;
            
            private DataColumn column指针;
            
            private DataColumn column内容提要;
            
            internal bookDataTable() : 
                    base("book") {
                this.InitClass();
            }
            
            internal bookDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn 书名Column {
                get {
                    return this.column书名;
                }
            }
            
            internal DataColumn 并列提名Column {
                get {
                    return this.column并列提名;
                }
            }
            
            internal DataColumn 副提名Column {
                get {
                    return this.column副提名;
                }
            }
            
            internal DataColumn 并列副提名Column {
                get {
                    return this.column并列副提名;
                }
            }
            
            internal DataColumn 国别Column {
                get {
                    return this.column国别;
                }
            }
            
            internal DataColumn 第一责任者Column {
                get {
                    return this.column第一责任者;
                }
            }
            
            internal DataColumn 其他责任者Column {
                get {
                    return this.column其他责任者;
                }
            }
            
            internal DataColumn 版本Column {
                get {
                    return this.column版本;
                }
            }
            
            internal DataColumn 有关责任者Column {
                get {
                    return this.column有关责任者;
                }
            }
            
            internal DataColumn 出版地Column {
                get {
                    return this.column出版地;
                }
            }
            
            internal DataColumn 出版者Column {
                get {
                    return this.column出版者;
                }
            }
            
            internal DataColumn 出版日期Column {
                get {
                    return this.column出版日期;
                }
            }
            
            internal DataColumn 页数Column {
                get {
                    return this.column页数;
                }
            }
            
            internal DataColumn 开本Column {
                get {
                    return this.column开本;
                }
            }
            
            internal DataColumn 附图Column {
                get {
                    return this.column附图;
                }
            }
            
            internal DataColumn 附件Column {
                get {
                    return this.column附件;
                }
            }
            
            internal DataColumn 价格Column {
                get {
                    return this.column价格;
                }
            }
            
            internal DataColumn 附注Column {
                get {
                    return this.column附注;
                }
            }
            
            internal DataColumn 文种号Column {
                get {
                    return this.column文种号;
                }
            }
            
            internal DataColumn 图书分类号Column {
                get {
                    return this.column图书分类号;
                }
            }
            
            internal DataColumn 种次号Column {
                get {
                    return this.column种次号;
                }
            }
            
            internal DataColumn 年代顺序号Column {
                get {
                    return this.column年代顺序号;
                }
            }
            
            internal DataColumn 入库日期Column {
                get {
                    return this.column入库日期;
                }
            }
            
            internal DataColumn 馆藏量Column {
                get {
                    return this.column馆藏量;
                }
            }
            
            internal DataColumn 借出书量Column {
                get {
                    return this.column借出书量;
                }
            }
            
            internal DataColumn 借出次数Column {
                get {
                    return this.column借出次数;
                }
            }
            
            internal DataColumn 拒借次数Column {
                get {
                    return this.column拒借次数;
                }
            }
            
            internal DataColumn 拒借标记Column {
                get {
                    return this.column拒借标记;
                }
            }
            
            internal DataColumn 有效规范Column {
                get {
                    return this.column有效规范;
                }
            }
            
            internal DataColumn 失效规范Column {
                get {
                    return this.column失效规范;
                }
            }
            
            internal DataColumn 指针Column {
                get {
                    return this.column指针;
                }
            }
            
            internal DataColumn 内容提要Column {
                get {
                    return this.column内容提要;
                }
            }
            
            public bookRow this[int index] {
                get {
                    return ((bookRow)(this.Rows[index]));
                }
            }
            
            public event bookRowChangeEventHandler bookRowChanged;
            
            public event bookRowChangeEventHandler bookRowChanging;
            
            public event bookRowChangeEventHandler bookRowDeleted;
            
            public event bookRowChangeEventHandler bookRowDeleting;
            
            public void AddbookRow(bookRow row) {
                this.Rows.Add(row);
            }
            
            public bookRow AddbookRow(
                        string 书名, 
                        string 并列提名, 
                        string 副提名, 
                        string 并列副提名, 
                        string 国别, 
                        string 第一责任者, 
                        string 其他责任者, 
                        string 版本, 
                        string 有关责任者, 
                        string 出版地, 
                        string 出版者, 
                        string 出版日期, 
                        string 页数, 
                        string 开本, 
                        string 附图, 
                        string 附件, 
                        string 价格, 
                        string 附注, 
                        string 文种号, 
                        string 图书分类号, 
                        string 种次号, 
                        string 年代顺序号, 
                        System.DateTime 入库日期, 
                        System.Double 馆藏量, 
                        System.Double 借出书量, 
                        System.Double 借出次数, 
                        System.Double 拒借次数, 
                        bool 拒借标记, 
                        bool 有效规范, 
                        bool 失效规范, 
                        System.Double 指针, 
                        string 内容提要) {
                bookRow rowbookRow = ((bookRow)(this.NewRow()));
                rowbookRow.ItemArray = new object[] {
                        书名,
                        并列提名,
                        副提名,
                        并列副提名,
                        国别,
                        第一责任者,
                        其他责任者,
                        版本,
                        有关责任者,
                        出版地,
                        出版者,
                        出版日期,
                        页数,
                        开本,
                        附图,
                        附件,
                        价格,
                        附注,
                        文种号,
                        图书分类号,
                        种次号,
                        年代顺序号,
                        入库日期,
                        馆藏量,
                        借出书量,
                        借出次数,
                        拒借次数,
                        拒借标记,
                        有效规范,
                        失效规范,
                        指针,
                        内容提要};
                this.Rows.Add(rowbookRow);
                return rowbookRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                bookDataTable cln = ((bookDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new bookDataTable();
            }
            
            internal void InitVars() {
                this.column书名 = this.Columns["书名"];
                this.column并列提名 = this.Columns["并列提名"];
                this.column副提名 = this.Columns["副提名"];
                this.column并列副提名 = this.Columns["并列副提名"];
                this.column国别 = this.Columns["国别"];
                this.column第一责任者 = this.Columns["第一责任者"];
                this.column其他责任者 = this.Columns["其他责任者"];
                this.column版本 = this.Columns["版本"];
                this.column有关责任者 = this.Columns["有关责任者"];
                this.column出版地 = this.Columns["出版地"];
                this.column出版者 = this.Columns["出版者"];
                this.column出版日期 = this.Columns["出版日期"];
                this.column页数 = this.Columns["页数"];
                this.column开本 = this.Columns["开本"];
                this.column附图 = this.Columns["附图"];
                this.column附件 = this.Columns["附件"];
                this.column价格 = this.Columns["价格"];
                this.column附注 = this.Columns["附注"];
                this.column文种号 = this.Columns["文种号"];
                this.column图书分类号 = this.Columns["图书分类号"];
                this.column种次号 = this.Columns["种次号"];
                this.column年代顺序号 = this.Columns["年代顺序号"];
                this.column入库日期 = this.Columns["入库日期"];
                this.column馆藏量 = this.Columns["馆藏量"];
                this.column借出书量 = this.Columns["借出书量"];
                this.column借出次数 = this.Columns["借出次数"];
                this.column拒借次数 = this.Columns["拒借次数"];
                this.column拒借标记 = this.Columns["拒借标记"];
                this.column有效规范 = this.Columns["有效规范"];
                this.column失效规范 = this.Columns["失效规范"];
                this.column指针 = this.Columns["指针"];
                this.column内容提要 = this.Columns["内容提要"];
            }
            
            private void InitClass() {
                this.column书名 = new DataColumn("书名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column书名);
                this.column并列提名 = new DataColumn("并列提名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column并列提名);
                this.column副提名 = new DataColumn("副提名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column副提名);
                this.column并列副提名 = new DataColumn("并列副提名", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column并列副提名);
                this.column国别 = new DataColumn("国别", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column国别);
                this.column第一责任者 = new DataColumn("第一责任者", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column第一责任者);
                this.column其他责任者 = new DataColumn("其他责任者", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column其他责任者);
                this.column版本 = new DataColumn("版本", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column版本);
                this.column有关责任者 = new DataColumn("有关责任者", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column有关责任者);
                this.column出版地 = new DataColumn("出版地", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column出版地);
                this.column出版者 = new DataColumn("出版者", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column出版者);
                this.column出版日期 = new DataColumn("出版日期", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column出版日期);
                this.column页数 = new DataColumn("页数", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column页数);
                this.column开本 = new DataColumn("开本", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column开本);
                this.column附图 = new DataColumn("附图", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column附图);
                this.column附件 = new DataColumn("附件", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column附件);
                this.column价格 = new DataColumn("价格", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column价格);
                this.column附注 = new DataColumn("附注", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column附注);
                this.column文种号 = new DataColumn("文种号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column文种号);
                this.column图书分类号 = new DataColumn("图书分类号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column图书分类号);
                this.column种次号 = new DataColumn("种次号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column种次号);
                this.column年代顺序号 = new DataColumn("年代顺序号", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column年代顺序号);
                this.column入库日期 = new DataColumn("入库日期", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column入库日期);
                this.column馆藏量 = new DataColumn("馆藏量", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column馆藏量);
                this.column借出书量 = new DataColumn("借出书量", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column借出书量);
                this.column借出次数 = new DataColumn("借出次数", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column借出次数);
                this.column拒借次数 = new DataColumn("拒借次数", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column拒借次数);
                this.column拒借标记 = new DataColumn("拒借标记", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column拒借标记);
                this.column有效规范 = new DataColumn("有效规范", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column有效规范);
                this.column失效规范 = new DataColumn("失效规范", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column失效规范);
                this.column指针 = new DataColumn("指针", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column指针);
                this.column内容提要 = new DataColumn("内容提要", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column内容提要);
                this.column拒借标记.AllowDBNull = false;
            }
            
            public bookRow NewbookRow() {
                return ((bookRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new bookRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(bookRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.bookRowChanged != null)) {
                    this.bookRowChanged(this, new bookRowChangeEvent(((bookRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.bookRowChanging != null)) {
                    this.bookRowChanging(this, new bookRowChangeEvent(((bookRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.bookRowDeleted != null)) {
                    this.bookRowDeleted(this, new bookRowChangeEvent(((bookRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.bookRowDeleting != null)) {
                    this.bookRowDeleting(this, new bookRowChangeEvent(((bookRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovebookRow(bookRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class bookRow : DataRow {
            
            private bookDataTable tablebook;
            
            internal bookRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablebook = ((bookDataTable)(this.Table));
            }
            
            public string 书名 {
                get {
                    try {
                        return ((string)(this[this.tablebook.书名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.书名Column] = value;
                }
            }
            
            public string 并列提名 {
                get {
                    try {
                        return ((string)(this[this.tablebook.并列提名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.并列提名Column] = value;
                }
            }
            
            public string 副提名 {
                get {
                    try {
                        return ((string)(this[this.tablebook.副提名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.副提名Column] = value;
                }
            }
            
            public string 并列副提名 {
                get {
                    try {
                        return ((string)(this[this.tablebook.并列副提名Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.并列副提名Column] = value;
                }
            }
            
            public string 国别 {
                get {
                    try {
                        return ((string)(this[this.tablebook.国别Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.国别Column] = value;
                }
            }
            
            public string 第一责任者 {
                get {
                    try {
                        return ((string)(this[this.tablebook.第一责任者Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.第一责任者Column] = value;
                }
            }
            
            public string 其他责任者 {
                get {
                    try {
                        return ((string)(this[this.tablebook.其他责任者Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.其他责任者Column] = value;
                }
            }
            
            public string 版本 {
                get {
                    try {
                        return ((string)(this[this.tablebook.版本Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.版本Column] = value;
                }
            }
            
            public string 有关责任者 {
                get {
                    try {
                        return ((string)(this[this.tablebook.有关责任者Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.有关责任者Column] = value;
                }
            }
            
            public string 出版地 {
                get {
                    try {
                        return ((string)(this[this.tablebook.出版地Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.出版地Column] = value;
                }
            }
            
            public string 出版者 {
                get {
                    try {
                        return ((string)(this[this.tablebook.出版者Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.出版者Column] = value;
                }
            }
            
            public string 出版日期 {
                get {
                    try {
                        return ((string)(this[this.tablebook.出版日期Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.出版日期Column] = value;
                }
            }
            
            public string 页数 {
                get {
                    try {
                        return ((string)(this[this.tablebook.页数Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.页数Column] = value;
                }
            }
            
            public string 开本 {
                get {
                    try {
                        return ((string)(this[this.tablebook.开本Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.开本Column] = value;
                }
            }
            
            public string 附图 {
                get {
                    try {
                        return ((string)(this[this.tablebook.附图Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.附图Column] = value;
                }
            }
            
            public string 附件 {
                get {
                    try {
                        return ((string)(this[this.tablebook.附件Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.附件Column] = value;
                }
            }
            
            public string 价格 {
                get {
                    try {
                        return ((string)(this[this.tablebook.价格Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.价格Column] = value;
                }
            }
            
            public string 附注 {
                get {
                    try {
                        return ((string)(this[this.tablebook.附注Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.附注Column] = value;
                }
            }
            
            public string 文种号 {
                get {
                    try {
                        return ((string)(this[this.tablebook.文种号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.文种号Column] = value;
                }
            }
            
            public string 图书分类号 {
                get {
                    try {
                        return ((string)(this[this.tablebook.图书分类号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.图书分类号Column] = value;
                }
            }
            
            public string 种次号 {
                get {
                    try {
                        return ((string)(this[this.tablebook.种次号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.种次号Column] = value;
                }
            }
            
            public string 年代顺序号 {
                get {
                    try {
                        return ((string)(this[this.tablebook.年代顺序号Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.年代顺序号Column] = value;
                }
            }
            
            public System.DateTime 入库日期 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablebook.入库日期Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.入库日期Column] = value;
                }
            }
            
            public System.Double 馆藏量 {
                get {
                    try {
                        return ((System.Double)(this[this.tablebook.馆藏量Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.馆藏量Column] = value;
                }
            }
            
            public System.Double 借出书量 {
                get {
                    try {
                        return ((System.Double)(this[this.tablebook.借出书量Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.借出书量Column] = value;
                }
            }
            
            public System.Double 借出次数 {
                get {
                    try {
                        return ((System.Double)(this[this.tablebook.借出次数Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.借出次数Column] = value;
                }
            }
            
            public System.Double 拒借次数 {
                get {
                    try {
                        return ((System.Double)(this[this.tablebook.拒借次数Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.拒借次数Column] = value;
                }
            }
            
            public bool 拒借标记 {
                get {
                    return ((bool)(this[this.tablebook.拒借标记Column]));
                }
                set {
                    this[this.tablebook.拒借标记Column] = value;
                }
            }
            
            public bool 有效规范 {
                get {
                    try {
                        return ((bool)(this[this.tablebook.有效规范Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.有效规范Column] = value;
                }
            }
            
            public bool 失效规范 {
                get {
                    try {
                        return ((bool)(this[this.tablebook.失效规范Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.失效规范Column] = value;
                }
            }
            
            public System.Double 指针 {
                get {
                    try {
                        return ((System.Double)(this[this.tablebook.指针Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.指针Column] = value;
                }
            }
            
            public string 内容提要 {
                get {
                    try {
                        return ((string)(this[this.tablebook.内容提要Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablebook.内容提要Column] = value;
                }
            }
            
            public bool Is书名Null() {
                return this.IsNull(this.tablebook.书名Column);
            }
            
            public void Set书名Null() {
                this[this.tablebook.书名Column] = System.Convert.DBNull;
            }
            
            public bool Is并列提名Null() {
                return this.IsNull(this.tablebook.并列提名Column);
            }
            
            public void Set并列提名Null() {
                this[this.tablebook.并列提名Column] = System.Convert.DBNull;
            }
            
            public bool Is副提名Null() {
                return this.IsNull(this.tablebook.副提名Column);
            }
            
            public void Set副提名Null() {
                this[this.tablebook.副提名Column] = System.Convert.DBNull;
            }
            
            public bool Is并列副提名Null() {
                return this.IsNull(this.tablebook.并列副提名Column);
            }
            
            public void Set并列副提名Null() {
                this[this.tablebook.并列副提名Column] = System.Convert.DBNull;
            }
            
            public bool Is国别Null() {
                return this.IsNull(this.tablebook.国别Column);
            }
            
            public void Set国别Null() {
                this[this.tablebook.国别Column] = System.Convert.DBNull;
            }
            
            public bool Is第一责任者Null() {
                return this.IsNull(this.tablebook.第一责任者Column);
            }
            
            public void Set第一责任者Null() {
                this[this.tablebook.第一责任者Column] = System.Convert.DBNull;
            }
            
            public bool Is其他责任者Null() {
                return this.IsNull(this.tablebook.其他责任者Column);
            }
            
            public void Set其他责任者Null() {
                this[this.tablebook.其他责任者Column] = System.Convert.DBNull;
            }
            
            public bool Is版本Null() {
                return this.IsNull(this.tablebook.版本Column);
            }
            
            public void Set版本Null() {
                this[this.tablebook.版本Column] = System.Convert.DBNull;
            }
            
            public bool Is有关责任者Null() {
                return this.IsNull(this.tablebook.有关责任者Column);
            }
            
            public void Set有关责任者Null() {
                this[this.tablebook.有关责任者Column] = System.Convert.DBNull;
            }
            
            public bool Is出版地Null() {
                return this.IsNull(this.tablebook.出版地Column);
            }
            
            public void Set出版地Null() {
                this[this.tablebook.出版地Column] = System.Convert.DBNull;
            }
            
            public bool Is出版者Null() {
                return this.IsNull(this.tablebook.出版者Column);
            }
            
            public void Set出版者Null() {
                this[this.tablebook.出版者Column] = System.Convert.DBNull;
            }
            
            public bool Is出版日期Null() {
                return this.IsNull(this.tablebook.出版日期Column);
            }
            
            public void Set出版日期Null() {
                this[this.tablebook.出版日期Column] = System.Convert.DBNull;
            }
            
            public bool Is页数Null() {
                return this.IsNull(this.tablebook.页数Column);
            }
            
            public void Set页数Null() {
                this[this.tablebook.页数Column] = System.Convert.DBNull;
            }
            
            public bool Is开本Null() {
                return this.IsNull(this.tablebook.开本Column);
            }
            
            public void Set开本Null() {
                this[this.tablebook.开本Column] = System.Convert.DBNull;
            }
            
            public bool Is附图Null() {
                return this.IsNull(this.tablebook.附图Column);
            }
            
            public void Set附图Null() {
                this[this.tablebook.附图Column] = System.Convert.DBNull;
            }
            
            public bool Is附件Null() {
                return this.IsNull(this.tablebook.附件Column);
            }
            
            public void Set附件Null() {
                this[this.tablebook.附件Column] = System.Convert.DBNull;
            }
            
            public bool Is价格Null() {
                return this.IsNull(this.tablebook.价格Column);
            }
            
            public void Set价格Null() {
                this[this.tablebook.价格Column] = System.Convert.DBNull;
            }
            
            public bool Is附注Null() {
                return this.IsNull(this.tablebook.附注Column);
            }
            
            public void Set附注Null() {
                this[this.tablebook.附注Column] = System.Convert.DBNull;
            }
            
            public bool Is文种号Null() {
                return this.IsNull(this.tablebook.文种号Column);
            }
            
            public void Set文种号Null() {
                this[this.tablebook.文种号Column] = System.Convert.DBNull;
            }
            
            public bool Is图书分类号Null() {
                return this.IsNull(this.tablebook.图书分类号Column);
            }
            
            public void Set图书分类号Null() {
                this[this.tablebook.图书分类号Column] = System.Convert.DBNull;
            }
            
            public bool Is种次号Null() {
                return this.IsNull(this.tablebook.种次号Column);
            }
            
            public void Set种次号Null() {
                this[this.tablebook.种次号Column] = System.Convert.DBNull;
            }
            
            public bool Is年代顺序号Null() {
                return this.IsNull(this.tablebook.年代顺序号Column);
            }
            
            public void Set年代顺序号Null() {
                this[this.tablebook.年代顺序号Column] = System.Convert.DBNull;
            }
            
            public bool Is入库日期Null() {
                return this.IsNull(this.tablebook.入库日期Column);
            }
            
            public void Set入库日期Null() {
                this[this.tablebook.入库日期Column] = System.Convert.DBNull;
            }
            
            public bool Is馆藏量Null() {
                return this.IsNull(this.tablebook.馆藏量Column);
            }
            
            public void Set馆藏量Null() {
                this[this.tablebook.馆藏量Column] = System.Convert.DBNull;
            }
            
            public bool Is借出书量Null() {
                return this.IsNull(this.tablebook.借出书量Column);
            }
            
            public void Set借出书量Null() {
                this[this.tablebook.借出书量Column] = System.Convert.DBNull;
            }
            
            public bool Is借出次数Null() {
                return this.IsNull(this.tablebook.借出次数Column);
            }
            
            public void Set借出次数Null() {
                this[this.tablebook.借出次数Column] = System.Convert.DBNull;
            }
            
            public bool Is拒借次数Null() {
                return this.IsNull(this.tablebook.拒借次数Column);
            }
            
            public void Set拒借次数Null() {
                this[this.tablebook.拒借次数Column] = System.Convert.DBNull;
            }
            
            public bool Is有效规范Null() {
                return this.IsNull(this.tablebook.有效规范Column);
            }
            
            public void Set有效规范Null() {
                this[this.tablebook.有效规范Column] = System.Convert.DBNull;
            }
            
            public bool Is失效规范Null() {
                return this.IsNull(this.tablebook.失效规范Column);
            }
            
            public void Set失效规范Null() {
                this[this.tablebook.失效规范Column] = System.Convert.DBNull;
            }
            
            public bool Is指针Null() {
                return this.IsNull(this.tablebook.指针Column);
            }
            
            public void Set指针Null() {
                this[this.tablebook.指针Column] = System.Convert.DBNull;
            }
            
            public bool Is内容提要Null() {
                return this.IsNull(this.tablebook.内容提要Column);
            }
            
            public void Set内容提要Null() {
                this[this.tablebook.内容提要Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class bookRowChangeEvent : EventArgs {
            
            private bookRow eventRow;
            
            private DataRowAction eventAction;
            
            public bookRowChangeEvent(bookRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public bookRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
